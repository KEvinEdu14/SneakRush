name: 🚀 QA Deploy Auth Service

on:
  push:
    branches:
      - qa
    paths:
      - 'BACKEND/domains/user_security/auth_service/**'

jobs:
  deploy:
    runs-on: ubuntu-latest

    steps:
      - name: 🔄 Checkout code
        uses: actions/checkout@v3

      - name: 🔑 Set up SSH
        uses: webfactory/ssh-agent@v0.8.0
        with:
          ssh-private-key: ${{ secrets.EC2_SSH_KEY }}

      - name: 🐳 Login to Docker Hub
        uses: docker/login-action@v2
        with:
          registry: docker.io
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: 📂 Navigate to auth_service
        working-directory: ./BACKEND/domains/user_security/auth_service
        run: echo "📁 In auth_service directory"

      - name: 📦 Build and Push Docker Image
        working-directory: ./BACKEND/domains/user_security/auth_service
        run: |
          IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/auth_service:${{ github.sha }}
          docker build -t $IMAGE .
          docker push $IMAGE
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: 🚀 Deploy to EC2 and Run Container
        run: |
          ssh -o StrictHostKeyChecking=no ubuntu@${{ secrets.QA_EC2_ELASTIC_IP }} << 'EOF'
            set -e
            IMAGE=${{ secrets.DOCKERHUB_USERNAME }}/auth_service:${{ github.sha }}
            cd /home/ubuntu/auth_service
            echo "Pulling image: $IMAGE"
            docker pull $IMAGE
            docker stop auth_service || true
            docker rm auth_service || true
            docker run -d \
              --name auth_service \
              --env-file /home/ubuntu/auth_service/.env \
              -p 8000:8000 \
              $IMAGE
          EOF

      - name: 🔍 Health check on EC2
        run: |
          sleep 10
          echo "Testing http://${{ secrets.QA_EC2_ELASTIC_IP }}:8000/health"
          curl --fail http://${{ secrets.QA_EC2_ELASTIC_IP }}:8000/health
