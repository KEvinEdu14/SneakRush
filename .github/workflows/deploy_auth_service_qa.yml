name: ðŸš€ QA Deploy All Services

on:
  push:
    branches: [ qa ]

env:
  DOCKERHUB_REPO: ${{ secrets.DOCKERHUB_USERNAME }}

jobs:
  deploy-auth-service:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3

      - name: Build & Push Auth Image
        run: |
          IMAGE=${DOCKERHUB_REPO}/auth-service:${{ github.sha }}
          echo "${{ secrets.DOCKERHUB_TOKEN }}" | docker login -u "${{ secrets.DOCKERHUB_USERNAME }}" --password-stdin
          docker build -t $IMAGE BACKEND/domains/user_security/auth-service
          docker push $IMAGE
          echo "IMAGE=$IMAGE" >> $GITHUB_ENV

      - name: Deploy to QA EC2
        uses: appleboy/ssh-action@v0.1.8
        with:
          host: ${{ secrets.QA_EC2_ELASTIC_IP }}
          username: ubuntu
          key: ${{ secrets.EC2_SSH_KEY }}
          script: |
            cd /home/ubuntu/SneakRush/BACKEND/domains/user_security/auth-service
            docker pull $IMAGE
            docker rm -f auth-service || true
            docker run -d \
              --name auth-service \
              --env-file .env \
              -p 8000:8000 \
              $IMAGE

      - name: Smoke-test health endpoint
        run: |
          # Usa ALB si existe, si no EC2 IP
          TARGET="${{ secrets.QA_ALB_DNS }}:${{ '' }}"  # si ALB en 80
          if [ -z "$TARGET" ]; then
            TARGET="${{ secrets.QA_EC2_ELASTIC_IP }}:8000"
          else
            # si QA_ALB_DNS definido, omitimos :8000 (escucha en 80)
            TARGET="${{ secrets.QA_ALB_DNS }}"
          fi
          echo "Probing health endpoint via $TARGET..."
          curl --fail http://$TARGET/health
